# Generated by Django 2.2.12 on 2020-05-11 13:20

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import re


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('password', models.CharField(max_length=100)),
                ('name', models.CharField(max_length=200)),
                ('address', models.TextField()),
                ('city', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254, primary_key=True, serialize=False)),
                ('phone', models.CharField(blank=True, max_length=15, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
            ],
        ),
        migrations.CreateModel(
            name='DeliveryBoy',
            fields=[
                ('password', models.CharField(max_length=100)),
                ('name', models.CharField(max_length=200)),
                ('address', models.TextField()),
                ('city', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254, primary_key=True, serialize=False)),
                ('phone', models.CharField(blank=True, max_length=15, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
            ],
        ),
        migrations.CreateModel(
            name='Locrest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('restid', models.EmailField(max_length=254)),
                ('address_rest', models.CharField(max_length=1000, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Locuser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('custid', models.EmailField(max_length=254)),
                ('address_user', models.CharField(max_length=1000, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Restaurant',
            fields=[
                ('email', models.EmailField(max_length=254, primary_key=True, serialize=False)),
                ('password', models.CharField(max_length=100)),
                ('name', models.CharField(max_length=200)),
                ('address', models.TextField()),
                ('res_type', models.CharField(choices=[('B', 'Bar'), ('R', 'Restaurant'), ('C', 'Cafe')], default='R', max_length=1)),
                ('cuisine', models.CharField(max_length=100, null=True)),
                ('city', models.CharField(max_length=100, null=True)),
                ('phone', models.CharField(blank=True, max_length=15, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('imgurl', models.CharField(max_length=1000, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('made_by', models.EmailField(max_length=100)),
                ('made_on', models.DateTimeField(auto_now_add=True)),
                ('amount', models.IntegerField()),
                ('order_id', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('checksum', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Temp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.IntegerField(null=True)),
                ('custid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='foodspark.Customer')),
            ],
        ),
        migrations.CreateModel(
            name='Ratings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField(null=True)),
                ('review', models.CharField(max_length=1000, null=True)),
                ('custid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='foodspark.Customer')),
                ('restid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='foodspark.Restaurant')),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('foodlist', models.CharField(max_length=500, null=True, validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:,\\d+)*\\Z'), code='invalid', message='Enter only digits separated by commas.')])),
                ('foodqty', models.CharField(max_length=500, null=True, validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:,\\d+)*\\Z'), code='invalid', message='Enter only digits separated by commas.')])),
                ('amount', models.IntegerField(default=0)),
                ('ordertime', models.TimeField()),
                ('orderdate', models.DateField(auto_now_add=True)),
                ('deliverystatus', models.CharField(choices=[('p', 'Pending'), ('d', 'Delivered')], default='p', max_length=1)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='foodspark.Customer')),
                ('restaurant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='foodspark.Restaurant')),
            ],
        ),
        migrations.CreateModel(
            name='FoodItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500)),
                ('cuisine', models.CharField(max_length=100)),
                ('course', models.CharField(choices=[('s', 'Starter'), ('m', 'Main Course'), ('d', 'Desert')], max_length=1)),
                ('price', models.IntegerField()),
                ('availability_time', models.TimeField()),
                ('ordercount', models.IntegerField(default=0)),
                ('resid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='foodspark.Restaurant')),
            ],
        ),
        migrations.CreateModel(
            name='DeliveryItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deliverystatus', models.CharField(choices=[('p', 'Pending'), ('d', 'Delivered')], default='p', max_length=1)),
                ('deliveryboy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='foodspark.DeliveryBoy')),
                ('order_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='foodspark.Order')),
            ],
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('foodqty', models.IntegerField()),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='foodspark.Customer')),
                ('fooditem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='foodspark.FoodItem')),
            ],
        ),
    ]
